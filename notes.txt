
* run the script to remove <Sect> and <Div> elements, since they randomly divide the document; much easier to find all children
  in the same level
* Removed a few paragraphs from all xml files in resources/xml as it contained author data and some malformed data
* Some descriptions are malformed. Can have 'xyz abc xyz abc...' (repeated words compared to bookmark), or can have
  some number in the front. Manually edit them out (not many). List all bookmark tokens not found and then look at document.
* Note the above if you want to repeat the process for xml files with jpeg and png links

--

use these tips to install lxml
https://stackoverflow.com/questions/27008222/importerror-no-module-named-lxml-even-though-lxml-is-installed

--
# https://lxml.de/api.html
# https://docs.python.org/2/library/xml.etree.elementtree.html
# https://docs.python.org/3/tutorial/index.html
# https://stackoverflow.com/questions/21129020/how-to-fix-unicodedecodeerror-ascii-codec-cant-decode-byte
# https://stackoverflow.com/questions/279561/what-is-the-python-equivalent-of-static-variables-inside-a-function

# exec(open("./parser.py").read())
--

to run apache:

https://discussions.apple.com/docs/DOC-13841

to stop apache:
https://apple.stackexchange.com/questions/119674/disable-apache-autostart

access: http://localhost/~gpalya/glosariusz/index.html.en

https://product.hubspot.com/blog/git-and-github-tutorial-for-beginners

https://stackoverflow.com/questions/31152057/sync-local-repo-with-github
One way to get around this problem immediately would be to properly pull the master branch from GitHub, and then cherry pick the commit corresponding to the work you just did:
git remote add origin 'url to github repo'
git pull origin master
git checkout master
git cherry-pick <SHA-1 of commit you just made>
git commit -m 'Made a change to the master branch'
git push origin master

As the other answers stated, you can place .gitignore within any directory in a Git repository.

acrobat paid version, split into many html files based on bookmarks, split into many pdfs based on bookmarks but
  number the files - this way they correspond to html file numbers

PDF files have bookmarks and you save html by bookmark. however finance and bankowosc have nested bookmarks
  which don't save correctly into separate files during html conversion, and during pdf split all nested ones
  get put into one file -- so the file numbers of pdf and html don't match. so manually move nested ones out to high level.

PDF Cos information is only available to C/C++ plugins. they have SDK

There is something called links or destinations which map these bookmark equivalents to page numbers. cannot copy them.


